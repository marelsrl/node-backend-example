
    
    
    <div id="cart-viewport" class="flex flex-row w-full h-[36rem]">

        <div id="cart-left-side" class="basis-1/2 min-h-full">
            <div class="flex flex-row border-2 h-1/6">
                <div class="flex flex-col 
                            h-full w-1/4
                            items-center justify-center
                            bg-gray-700 text-white">
                     <p>Negozio</p>
                     <p class="font-bold text-3xl">001</p>
                </div>
                <div class="flex flex-col
                            h-full w-1/4 
                            items-center justify-center
                            bg-gray-700 text-white"> 
                    <p>Cassa</p>
                    <p class="font-bold text-3xl">465</p>
                </div>
                <div class="flex flex-col 
                            h-full w-1/4 
                            items-center justify-center
                            bg-gray-700 text-white"> 
                    <p>Operatore</p>
                    <p class="font-bold text-3xl">15246</p>
                </div>
                <div class="flex flex-col 
                            h-full w-1/4 
                            items-center justify-center bg-lime-300
                            text-green-400 font-bold py-2 px-4">
                    Attivo
                </div>
            </div>
            <div class="border-2 h-1/6">
                        
                <select id="scanner" onchange="upcChange()" onfocus="this.selectedIndex=-1;this.blur();">
                    
                    <% for (var i = 0; i < products.length ; i++) { %>
                        <option value="<%= products[i].upc %>"><%= products[i].upc %></option>
                    <% } %>
                </select>
                
            </div>
        
            <div x-data id="show"   class="flex flex-row border-2 h-2/6">
                
                <div class="h-full w-1/4 border-2 flex items-center justify-center">
                    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRqGMJFchB0471H1wedlqUNf3uIHRbVfwgCX-eAL2Rmcg&s" class="max-w-full h-auto border-2" alt="..." />
                </div>
                <div class="w-full flex flex-col border-2">
                    <div>
                        <input type="text" id="selection" placeholder="UPC" />
                    </div>
                    <div>
                        <h3 >Lipton</h3> <!-- brand -->
                    </div>
                    <div>
                        <h3 >Ice Tea: Limone 1,5 l</h3><!-- name -->
                    </div>
                    <div>
                        <h4 >PEPSICO BEVERAGES ITALIA</h4> <!-- manufacturer -->
                    </div>
                    <div>
                        <h5 >Acqua, succhi e bibite</h5><!-- departament -->
                    </div>

                </div>
        
            </div>

            <div id="buttons" class="border-2 h-2/6">
                <div class="h-full grid grid-flow-row-dense grid-cols-3 grid-rows-3 gap-2 p-1">
                    <div class="row-span-3 border-2 rounded">
                        <button onClick="newCart()" class="h-full w-full bg-lime-600 hover:bg-lime-800 text-white font-bold py-2 px-4 border border-lime-800 rounded">
                            Nuovo
                        </button>
                    </div>
                    <div class="border-2 rounded">
                        <button onClick="" class="h-full w-full bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 border border-indigo-700 rounded">
                            Amministrativo
                        </button>
                    </div>
                    <div class="border-2 rounded">
                        <button onClick="" class="h-full w-full bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 border border-green-700 rounded">
                            Fedelt√°
                        </button>
                    </div>
                    <div class="border-2 rounded">
                        <button onClick="" class="h-full w-full bg-violet-500 hover:bg-violet-600 text-white font-bold py-2 px-4 border border-violet-700 rounded">
                            Registra Cliente 
                        </button>
                    </div>
                    <div class="border-2 rounded">
                        <button onClick="" class="h-full w-full bg-pink-500 hover:bg-pink-700 text-white font-bold py-2 px-4 border border-pink-700 rounded">
                            Lotteria Scontrini
                        </button>
                    </div>
                    <div class="col-span-2 border-2 rounded">
                        <button onClick="" class="h-full w-full bg-red-400 hover:bg-red-600 text-white font-bold py-2 px-4 border border-red-400 rounded">
                            cancella
                        </button>
                    </div>
                  </div>
                
        
            </div>
        
             
            
            
        
             
        </div>
    
        <div id="cart-right-side" class="basis-1/2 min-h-full 
        grid grid-rows-6 gap-2 border-2">
            <div class="flex flex-row border-2">
                <div class="flex flex-col 
                h-full w-1/3 
                items-center justify-center
                bg-cyan-700 text-white">
                <p class="font-bold text-3xl">116</p>
                </div>
                <div class="flex flex-col
                h-full w-1/3 
                items-center justify-center
                bg-cyan-700 text-white">
                <p>Carrello</p>
                <p class="font-bold text-3xl">1457</p>
                </div>
                <div class="flex flex-col 
                h-full w-1/3
                items-center justify-center
                bg-cyan-700 text-white">
                <p>Cliente</p>
                <p class="font-semibold text-xl">Antimo Gionti</p>
                </div>
            </div>
            <div class="row-span-3 flex flex-col ">
                <div>header list</div>
                <div id="list" class="overflow-y-scroll h-56"></div>
            </div>
            <div class="border-2">
                totais
            </div>
            <div class="border-2">
                <button onClick="closeCart()" class="h-full w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded">
                    CHIUDI CONTO
                </button>
            </div>
            

        </div>
    
    
    
    </div>
    
    




<script>


document.addEventListener('alpine:init', () => {
        Alpine.data('scanned', _scan)
    })


    function _scan(){
        return{
            
            scan: {},
            scanned:async()=>await this.scan,
            newScan:(newValue) => {
                this.scan = newValue;
            }
            

        }
    }

    var cart ={}
    
    var metaCart = {}

    var items =[]

    var counts = {}

    var products = JSON.parse('<%- JSON.stringify(products) %> ')

    var prices = JSON.parse('<%- JSON.stringify(prices) %> ')

    var user = JSON.parse('<%- JSON.stringify(user) %> ')
  
   console.log(prices)


    //var products = JSON.parse(proString)
    //var prices = JSON.parse(pricesString)

    metaCart.promoCount = 0
    metaCart.regularCount = 0

    
    var ul = document.getElementById('cart-items');


    function data(){
        return{
            cart:{...cart},
            metacart:{...metaCart},
            items:Array.from(items),
            counts:{...counts}

        }
    }

    
   
    function upcChange(){
        var sel = document.getElementById('scanner').value
        var input = document.getElementById('selection')
        input.value = sel
        var item = products.filter((p)=>p.upc == sel)[0]
        var itemPrice = prices.filter((p)=>p.upc == sel)[0]
        var scanned = {...item, ...itemPrice}

        var itemsPromo = {}

        console.log(data())
       
        // set index of item in cart
        scanned.index = items.length + 1

        console.log(scanned)

        //group items and count ocurrences
        counts[scanned.productId] = counts[scanned.productId] ? counts[scanned.productId] + 1 : 1; 

        //verify if price is promo and calculate final price for promo type 1
        if (scanned.promoType>0){
        //***********************is a product with promo price
        metaCart.promoCount++
        
        

        //select products with simple discounted price
        if(scanned.promoType==1 && scanned.nthUnit==1){
               //calculates discount value based on porcentage or strict value
               scanned.discountValue = (scanned.exactDiscountedPrice &&
                                        scanned.exactDiscountedPrice > 0)?
                                        scanned.regularPrice - scanned.exactDiscountedPrice:scanned.regularPrice*scanned.discount
                
               //calculates the final price based on discount value or strict value 
               scanned.calculatedPrice = (scanned.exactDiscountedPrice &&
                                        scanned.exactDiscountedPrice > 0)?
                                        scanned.exactDiscountedPrice:scanned.regularPrice-scanned.discountValue

            } else {scanned.calculatedPrice = scanned.regularPrice}
        
            //select products with buy X units and pay x-y units
        if(scanned.promoType ==1 && scanned.nthUnit > 1){

                //divide all occurences by value nth element
                if(counts[scanned.productId] % scanned.nthUnit === 0){
                
                //set nth product price with the discount
                var calculated_price = scanned.regularPrice - (scanned.regularPrice * scanned.discount)
                scanned.calculatedPrice = calculated_price
                scanned.discountValue = scanned.regularPrice - calculated_price

                } else {scanned.calculatedPrice = scanned.regularPrice} 
            } 
            
            //select products with complex promo rules
            console.log(scanned.hasOwnProperty('reference'))
            console.log(scanned.reference !== undefined)
        if(scanned.promoType ==2 && scanned.reference !== undefined){

            var ref = scanned.reference
            scanned.useReference = false        
            //divide all occurences by value nth element
            if(counts[scanned.productId] % scanned.nthUnit === 0){
               scanned.useReference = true    
           console.log('need to implement promo', ref[0])

            } else {scanned.calculatedPrice = scanned.regularPrice} 
        }    

            

        }else{
        //***********************is a product with regular price
        metaCart.regularCount++
        scanned.calculatedPrice = scanned.regularPrice
            
                              

        }



        items.push(scanned)

        //refactor list analysing complex promo rules
        refactor()
        
        console.log(items)

        metaCart.totalSavings = sumByPropertie(items,'discountValue')

        console.log(metaCart)
        console.log(counts)
        
        
        //console.log(itemPrice)

        //var li = document.createElement('li');
        //li.setAttribute('class','item');

        //ul.appendChild(li);

        //li.innerHTML=li.innerHTML + item.name;

        //createDOMitem(scanned, cart.length+1)

        //set alpine object to be displayed on item div
        _scanned().newScan = scanned

        
        console.log('_scanned 2',_scanned().scanned())

        listItems(items);

    }

    function refactor(){
        console.log('refactoring...' )
        items.map((item)=>{
            if(item.promoType==2 && item.useReference){
                console.log('lookfor reference items');
                const references = Array.from(item.reference)
                references.forEach(refer => {

                    console.log(refer)
                    console.log(refer.quantity)
                    for(var i = 0; i < refer.quantity ; i++){
                        console.log('passo do loop na referencia', refer.quantity)
                        let referenceProduct = items.filter((p)=>{ return p.productId == refer.productId && p.consumedByPromo == undefined})[0]
                        console.log('referenceProduct', referenceProduct)
                        if(referenceProduct){
                            //calculate position on the original array of items -- remember thet items index is base 1, so take 1 from it
                            var pos = referenceProduct.index-1
                            //update necessary fields
                            items[pos].consumedByPromo = true
                            items[pos].calculatedPrice = refer.price
                        }
                        
                    }
                    
                });
                
            }
            
        })

    }

    function closeCart() {
        console.log('close cart routine')
    }


    function listItems(list){

        const div = document.getElementById('list')
        div.innerHTML = ''
        const ul = document.createElement('ul')


        Array.from(list).forEach((el, index)=>{
            console.log('no loop de items', el)
            const rp = parseFloat(el.regularPrice).toFixed( 2 )
            const pp = parseFloat(el.calculatedPrice).toFixed( 2 )
            const is_promo = el.promoType>0

            const liItem = `
            <span>${el.name}</span>
            
            ${is_promo?
               `<span> promo: ${el.promoType}</span>
                <span> from: ${rp}</span>
                <span> by: ${pp}</span>`
                :
                `<span> regular </span>
                 <span> price: ${rp}</span>
                 <span> by: ${pp}</span>`
                
            }  
        `

            ul.appendChild(
            Object.assign(
                document.createElement('li'),
                { innerHTML : liItem ,
                id:'item-' + index
                }
            )
        )

        })
        
        
        div.appendChild(ul)

    }
    
    function createDOMitem(item, index){
        const div = document.getElementById('cartItems')
        const rp = parseFloat(item.regularPrice).toFixed( 2 )
        const pp = parseFloat(item.calculatedPrice).toFixed( 2 )
        const is_promo = item.promoType>0
        const box = `
            <span>${item.name}</span>
            
            ${is_promo?
               `<span> promo: ${item.promoType}</span>
                <span> from: ${rp}</span>
                <span> by: ${pp}</span>`
                :
                `<span> price: ${rp}</span>`
            }  
        `
        
        div.appendChild(
            Object.assign(
                document.createElement('div'),
                { innerHTML : box ,
                id:'item-' + index,
                class:"w-full border-solid border-2 border-sky-500"
                }
            )
        )
    }

    function sumByPropertie(array, prop){
        return array.reduce( function(a, b){
            let v = b[prop]? b[prop] : 0
            return a + v;
        }, 0);
    };
    

   
   
</script>   
 
